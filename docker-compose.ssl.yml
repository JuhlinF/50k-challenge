version: '3.4'

services:
  django-base:
    build:
      context: ./src
      dockerfile: ./Dockerfile
    expose:
      - 8000
    env_file:
      - .env
      - .django.env
    volumes:
      - media_files:/home/django/mediafiles
      - static_files:/home/django/staticfiles
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "$POSTGRES_USER",
          "-d",
          "$POSTGRES_DB"
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - django-base

  acme-companion:
    image: nginxproxy/acme-companion
    env_file:
      - ./.acme-companion.env
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  media_files:
  static_files:
  certs:
  html:
  vhost:
  acme:
